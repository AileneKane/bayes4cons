---
title: "SSM"
author: "Marie Auger-Methe"
date: "`r Sys.Date()`"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

# Set up

```{r}
library(rstan)
library(bayesplot)
library(ggplot2)
# To run in parallel on multiple cores
options(mc.cores=parallel::detectCores())
# To avoid recompiling unchanged Stan program
rstan_options(auto_write=TRUE)
```


# Simulation: simple population model (values constrained to be positive)

Based on model described in Auger-Methe et al. (2021), which is based on Jamieson and Brooks (2004) and Dennis and Taper (1994). 

It's a simple population model with density dependence. 

Process equation: $z_{t} = z_{t-1}\exp(\beta_0 + \beta_1 z_{t-1} + \epsilon_t), \;\; \epsilon_t \sim \text{N}(0, \sigma_p^2),$

Observation equation: $y_t = z_t + \eta_t, \;\; \eta_t \sim \text{N}(0,\sigma_{o}^2),$

where $z_t$ is the true population size as time $t$, $y_t$ is the observed number of individuals at time $t$ in a count of the area from a line transect, $\beta_0$ is the population growth rate when the population is not feeling the effects of population density, $beta_1$ determines how much the population growth rate decreases as a function of population density, $\sigma_p$ is the standard deviation of the process equation (it represents the biological stochasticity), and $\sigma_o$ represents the standard deviation of the observation error.   
Scenario: we have re-introduced 10 adult females and some 10 adult males from an extirpated species in 2003 in a conservation area, and we are monitoring their growth for the path 20 years to see if they have reached carrying capacity and what is that carrying capacity.

This is a species that has a long life span (e.g. 20+ years) and creates long term pairs  that can produce maximum 2 offspring when in good conditions, and therefore could be able to almost double in size ever year. Here the conservation area does not allow the animal to fulfill it's full growth ($\beta_0 = 1.3$). From a repeated assessments of the efficiency of the line transect in early years, when all of the re-introduce animals were individually marked, we know that we can miss many individuals and have estimated the $\sigma_o = 10$.

As for most population of this species the birth rate, which is the main source of biological stochasticity, vary by less than 5%.

```{r}
# Create a vector that will keep track of the states
# It's of length T + 1 (+1 for t=0)
TT <- 20
z <- numeric(TT + 1)

# Population starts at 20 # Reintroduction
z[1] <- 20

# Standard deviation of the process variation

sdo <- 10
sdp <- 0.05
beta0 <- log(1.3) 
beta1 <- -0.005

# Set the seed, so we can reproduce the results
set.seed(87687)
# For-loop that simulates the state through time, using i instead of t,
for(i in 1:TT){
  # This is the process equation
  z[i+1] <- z[i]*exp(beta0 + beta1*z[i] + rnorm(1, 0, sdp))
  # Note that this index is shifted compared to equation in text,
  # because we assume the first value to be at time 0
}

# Create a vector that will keep track of the observations
# It's of length T
y <- numeric(TT)
# Standard deviation of the observation error

# For t=1, ... T, add measurement error
# Remember that z[1] is t=0
y <- z[2:(TT+1)] + rnorm(TT, 0, sdo)
```

```{r}
monitoring <- data.frame(year = seq(2024-TT, length.out = TT), true = z[-1], obs = y)
ggplot() +
  geom_point(data = monitoring, aes(y= true, x=year), col="hotpink") +
  geom_point(data = monitoring, aes(y= obs, x = year), col="grey") +
  ylab("Population")
```

# Fit models

Set up the data for all models.

```{r}
dataStan <- list(y=y, TT=TT, w0=log(z[1]))
```


## Vague prior

The priors on all four parameters are $\text{N}(0,100)$.

Fit model

```{r}
m.vague <- stan(file = "ssm_dens_vague.stan",
                data = dataStan,
                chains = 3, iter = 50000, seed="123")

```

We get lots of warnings, indicating that this model may be problematic for the data at hand.

Look at traceplots.

```{r}
traceplot(m.vague, pars=c("sdo", "sdp", "beta1", "beta0"))
```

Not well mixed.

Extract info nonetheless for comparison.

```{r}
# Posterior
m.vague.post <- as.matrix(m.vague)
sdo.est.vague <- m.vague.post[,"sdo"]
sdp.est.vague <- m.vague.post[,"sdp"]
beta0.est.vague <- m.vague.post[,"beta0"]
beta1.est.vague <- m.vague.post[,"beta1"]
```


## Informed prior - using narrow priors based on simulation (sanity check here that all works - for Lizzy)


We know that $\sigma_o = 10$, $\sigma_p = 0.05$, $\beta_0 = log(1.3)$, and $\beta_1 = -0.005$, so we set priors:  $\sigma_o \sim \text{N}(10, 0.1)$, $\sigma_p \sim \text{N}(0.05, 0.01)$, $\beta_0 \sim \text{N}(log(1.3), 0.01)$, and $\beta_1 \sim \text{N}(-0.005, 0.001)$.


```{r}
m.sim.informed <- stan(file = "ssm_dens_sim_informed.stan",
                data = dataStan,
                chains = 3, iter = 50000, seed="123")

```

All is good. No warning messages.

Look at traceplots.

```{r}
traceplot(m.sim.informed, pars=c("sdo", "sdp", "beta1", "beta0"))
```

Looks ok. 

Extract info

```{r}
m.sim.informed.post <- as.matrix(m.sim.informed)
sdo.est.sim.informed <- m.sim.informed.post[,"sdo"]
sdp.est.sim.informed <- m.sim.informed.post[,"sdp"]
beta0.est.sim.informed <- m.sim.informed.post[,"beta0"]
beta1.est.sim.informed <- m.sim.informed.post[,"beta1"]
```


## Informed prior based on biology

As mentioned above, we know that based on transects done in early years with marked individuals that $\sigma_o$ is estimated to be 10, and that estimate is reliable, so as a prior we use a normal distribution with mean 10 and sd 0.1. 

We also know from previous work that the mortality of adults is low, especially in conserved areas where there is no harvest, and that the birth rate varies from usually less than 5%. Given that 95.45% of a normal distribution falls within two standard deviation, we set the prior of $\sigma_o$ as $\text{N}(0.05, 0.01)$.

Given that the population is increasing and we know based on the birth rate that it can max double each year (if we assume no mortality), we restrict the value of $\beta_0$ to be between log(1) (stays the same) and log(2) (doubles).

Previous estimates of density dependence for the species in similar conservation areas range from -0.01 and -0.001, and thus we use a prior distribution for $\beta_1$ of $\text{Uniform}(-0.01,-0.001)$.


```{r}
m.biol.informed <- stan(file = "ssm_dens_biol_informed.stan",
                data = dataStan,
                chains = 3, iter = 50000, seed= "123")

```

We can remove the divergent message by narrowing the uniform from the density dependence, but not sure how realistic it would be to even give this range.


Look at traceplots.

```{r}
traceplot(m.biol.informed, pars=c("sdo", "sdp", "beta1", "beta0"))
```

Looks good to me.

```{r}
m.informed.post <- as.matrix(m.biol.informed)
sdo.est.informed <- m.informed.post[,"sdo"]
sdp.est.informed <- m.informed.post[,"sdp"]
beta0.est.informed <- m.informed.post[,"beta0"]
beta1.est.informed <- m.informed.post[,"beta1"]
```

Plot population estimate

```{r}
pop.est.informed <- exp(rstan::extract(m.biol.informed, pars = "w")[[1]])
pop.est.informed.sum <- data.frame(year= seq(2024-TT, length.out = TT), pop.mean = colMeans(pop.est.informed), 
                                   t(apply(pop.est.informed, 2, quantile, probs=c(0.025, 0.975))))
colnames(pop.est.informed.sum)[3:4] <- c("lower", "upper") 
ggplot(data=pop.est.informed.sum, aes(x=year, y=pop.mean)) +
  geom_point() +
  geom_ribbon(data=pop.est.informed.sum, aes(ymin = lower, ymax = upper), fill= alpha("hotpink", 0.5)) +
  geom_point(data = monitoring, aes(y= obs, x = year), col="grey") +
  ylab("Population")
```

# Compare models

Plot posterior
```{r}
plot_title <- ggtitle("Posterior distributions - vague",
                      "with medians and 80% intervals")
mcmc_areas(m.vague.post,
           pars = c("sdo", "sdp", "beta0", "beta1"),
           prob = 0.8) + plot_title +
  geom_vline(aes(xintercept = sdp), col="hotpink") +
  geom_vline(aes(xintercept = sdo), col="purple") +
  geom_vline(aes(xintercept = beta0), col="blue") +
  geom_vline(aes(xintercept = beta1), col="orange") 


plot_title <- ggtitle("Posterior distributions - sim informed",
                      "with medians and 80% intervals")
mcmc_areas(m.sim.informed.post,
           pars = c("sdo", "sdp", "beta0", "beta1"),
           prob = 0.8) + plot_title +
  geom_vline(aes(xintercept = sdp), col="hotpink") +
  geom_vline(aes(xintercept = sdo), col="purple") +
  geom_vline(aes(xintercept = beta0), col="blue") +
  geom_vline(aes(xintercept = beta1), col="orange") 

plot_title <- ggtitle("Posterior distributions - biol informed",
                      "with medians and 80% intervals")
mcmc_areas(m.informed.post,
           pars = c("sdo", "sdp", "beta0", "beta1"),
           prob = 0.8) + plot_title +
  geom_vline(aes(xintercept = sdp), col="hotpink") +
  geom_vline(aes(xintercept = sdo), col="purple") +
  geom_vline(aes(xintercept = beta0), col="blue") +
  geom_vline(aes(xintercept = beta1), col="orange") 

```

Comparing just vague to biol informed

```{r}
data.frame(sdo = c(sdo, mean(sdo.est.vague), mean(sdo.est.informed)), 
           sdo.025 = c(NA, quantile(sdo.est.vague, probs = 0.025), quantile(sdo.est.informed, probs = 0.025)),
           sdo.975 = c(NA, quantile(sdo.est.vague, probs = 0.975), quantile(sdo.est.informed, probs = 0.975)),
           sdp = c(sdp, mean(sdp.est.vague), mean(sdp.est.informed)),
           sdp.025 = c(NA, quantile(sdp.est.vague, probs = 0.025), quantile(sdp.est.informed, probs = 0.025)),
           sdp.975 = c(NA, quantile(sdp.est.vague, probs = 0.975), quantile(sdp.est.informed, probs = 0.975)),
           beta0 = c(beta0, mean(beta0.est.vague), mean(beta0.est.informed)),
           beta0.025 = c(NA, quantile(beta0.est.vague, probs = 0.025), quantile(beta0.est.informed, probs = 0.025)),
           beta0.975 = c(NA, quantile(beta0.est.vague, probs = 0.975), quantile(beta0.est.informed, probs = 0.975)),
           beta1 = c(beta1, mean(beta1.est.vague), mean(beta1.est.informed)),
           beta1.025 = c(NA, quantile(beta1.est.vague, probs = 0.025), quantile(beta1.est.informed, probs = 0.025)),
           beta1.975 = c(NA, quantile(beta1.est.vague, probs = 0.975), quantile(beta1.est.informed, probs = 0.975)))
```

This looks good to me.

# Literature cited

Auger-Méthé, M., K. Newman, D. Cole, F. Empacher, R. Gryba, A. A. King, V. Leos-Barajas, J. Mills Flemming, A. Nielsen, G. Petris, and L. Thomas. 2021. A guide to state–space modeling of ecological time series. Ecological Monographs 91:e01470.

Dennis, B., and M. L. Taper. 1994. Density dependence in time series observations of natural populations: estimation and testing. Ecological Monographs 64:205–224.

Jamieson, L. E., and S. P. Brooks. 2004. Density dependence in North American ducks. Animal Biodiversity and Conservation 27:113–128. 
